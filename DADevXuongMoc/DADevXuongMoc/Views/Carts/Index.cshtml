@model IEnumerable<DADevXuongMoc.Models.Cart>
@{
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="home-cart">
    <div class="row">
        <div class="col-md-12 cart">
            <div class="container py-4">
                <h2 class="text-center text-secondary font-weight-bold border-bottom pb-2">GIỎ HÀNG</h2>
            </div>
            <div class="box-cart">
                <div class="box-cart-item-box">
                    @if (!Model.Any())
                    {
                        <div class="alert alert-warning text-center" role="alert">
                            Giỏ hàng của bạn đang trống.<a href="/product"><p style="color:blue">bấm vào đây để mua hàng</p></a>
                        </div>
                    }
                    else
                    {
                        @foreach (var item in Model)
                        {
                            var money = item.Price * item.Quantity;
                            <div class="box-cart-border-bottom d-flex justify-content-between align-items-center py-3 border-bottom">
                                <div class="box-cart-item d-flex justify-content-start align-items-center">
                                    <img src="@item.Image" alt="@item.Name" class="box-cart-item-img rounded" />
                                    <div class="d-flex flex-column ms-3">
                                        <h5 class="fw-bold">@item.Name</h5>
                                        <div class="box-cart-item-btn d-flex align-items-center">
                                            <button class="btn btn-sm btn-outline-secondary qty_btn"><i class="fa fa-minus"></i></button>
                                            <input type="number" class="qty_input form-control form-control-sm w-25 text-center" value="@item.Quantity" />
                                            <button class="btn btn-sm btn-outline-secondary qty_btn"><i class="fa fa-plus"></i></button>
                                        </div>
                                        <p data-price="@item.Price">Giá: <span>@string.Format("{0:#,##0}", @item.Price)</span> VND</p>
                                        <p data-money="@money" class="total-money">Thành tiền: <span id="money">@string.Format("{0:#,##0}", @money)</span> VND</p>
                                    </div>
                                </div>
                                <div class="btn-action">
                                    <a href="/carts/remove/?id=@item.Id" class="btn remove"><i class="fa-solid fa-xmark"></i></a>
                                    <a href="/carts/update/?id=@item.Id&quantity=@item.Quantity" data-id="@item.Id" data-qty="@item.Quantity" class="btn update">Cập nhật</a>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="box-cart-bill">
                    @if (Model.Any())
                    {
                        <h3 class="mb-4">Tóm tắt đơn hàng</h3>
                        <p class="mb-2">
                            <strong>Tổng thành tiền:</strong>
                            <span id="totalMoney" class="fw-bold">@string.Format("{0:#,##0}", ViewBag.total)</span> VND
                        </p>
                        <p class="mb-2">
                            <strong>Phí vận chuyển:</strong>
                            <span class="ship-money text-success">Free Ship</span><br>
                            <small class="text-muted">(Miễn phí vận chuyển với đơn hàng trên 10 triệu)</small>
                        </p>
                        <p class="mb-4">
                            <strong>Thông tin vận chuyển:</strong> Sản phẩm sẽ được Hoàng Hoan giao trong vòng 2-7 ngày.<br>
                            <strong>Chi tiết liên hệ:</strong> <a href="tel:0978611889" class="text-primary">0978 611 889</a>
                        </p>
                        <div class="cart-box cart-layout border p-3 rounded">
                            <div class="d-flex justify-content-between mb-3">
                                <strong>Tổng tiền:</strong>
                                <span id="totalMoneyPay" class="fw-bold">@string.Format("{0:#,##0}", ViewBag.total)</span> VND
                            </div>
                            <div class="d-flex justify-content-between">
                                <a href="/carts/orders" class="btn btn-primary active">Đặt hàng ngay</a>
                                <a href="/product" class="btn btn-secondary active">Tiếp tục mua hàng</a>
                            </div>

                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    // (Phần script cập nhật số lượng và tính toán tổng tiền ở đây)
</script>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('.qty_btn .fa-minus').click(function () {
            let qty = parseInt($(this).parent().siblings('.qty_input').val());
            let price = parseFloat($(this).parent().parent().siblings('p').attr("data-price"));
            qty -= 1;
            let money = qty * price;
            $(this).parent().siblings('.qty_input').val(qty);
            let id = $(this).parent().parent().parent().parent().siblings('.btn-action').children('.update').attr("data-id");
            let href = "/carts/Update/?id=" + id + "&quantity=" + qty;
            $(this).parent().parent().parent().parent().siblings('.btn-action').children('.update').attr("href", href);
            $(this).parent().parent().siblings('p').attr("data-money", money);
            let total_money = formatMoney(money, 0, ",", ".");
            $(this).parent().parent().siblings('p').children("span#money").text(total_money);
            let totalMoney = formatMoney(total(), 0, ",", ".");
            $("#totalMoney").text(totalMoney);
            $("#totalMoneyPay").text(totalMoney);
        })
        $('.qty_btn .fa-plus').click(function () {
            let qty = parseInt($(this).parent().siblings('.qty_input').val());
            let price = parseFloat($(this).parent().parent().siblings('p').attr("data-price"));
            qty += 1;
            let money = qty * price;
            $(this).parent().siblings('.qty_input').val(qty);
            let id = $(this).parent().parent().parent().parent().siblings('.btn-action').children('.update').attr("data-id");
            let href = "/carts/Update/?id=" + id + "&quantity=" + qty;
            $(this).parent().parent().parent().parent().siblings('.btn-action').children('.update').attr("href", href);
            $(this).parent().parent().siblings('p').attr("data-money", money);
            let total_money = formatMoney(money, 0, ",", ".");
            $(this).parent().parent().siblings('p').children("span#money").text(total_money);
            let totalMoney = formatMoney(total(), 0, ",", ".");
            $("#totalMoney").text(totalMoney);
            $("#totalMoneyPay").text(totalMoney);
        })
        $('.qty_input').change(function () {
            let qty = parseInt($(this).val());
            let id = $(this).parent().parent().parent().siblings('.btn-action').children('.update').attr("data-id");
            let price = parseFloat($(this).parent().siblings('p').attr("data-price"));
            let money = qty * price;
            let href = "/carts/Update/?id=" + id + "&quantity=" + qty;
            $(this).parent().parent().parent().siblings('.btn-action').children('.update').attr("href", href);
            $(this).parent().parent().siblings('p').attr("data-money", money);
            let total_money = formatMoney(money, 0, ",", ".");
            $(this).parent().siblings('p').children("span#money").text(total_money)
            let totalMoney = formatMoney(total(), 0, ",", ".");
            $("#totalMoney").text(totalMoney);
            $("#totalMoneyPay").text(totalMoney);
        })

        function total() {
            let totalMoney = 0;
            $("p.total-money").each(function () {
                console.log($(this));
                console.log($(this).attr("data-money"));
                let money = parseFloat($(this).attr("data-money"));
                console.log("total-money", money);
                totalMoney += money;
            });
            return totalMoney;
        }

        total();

    })

    function formatMoney(amount, decimalCount = 2, decimal = ".", thousands = ",") {
        try {
            decimalCount = Math.abs(decimalCount);
            decimalCount = isNaN(decimalCount) ? 2 : decimalCount;

            const negativeSign = amount < 0 ? "-" : "";

            let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();
            let j = (i.length > 3) ? i.length % 3 : 0;

            return negativeSign +
                (j ? i.substr(0, j) + thousands : '') +
                i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands) +
                (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : "");
        } catch (e) {
            console.log(e)
        }
    };
</script>
}
